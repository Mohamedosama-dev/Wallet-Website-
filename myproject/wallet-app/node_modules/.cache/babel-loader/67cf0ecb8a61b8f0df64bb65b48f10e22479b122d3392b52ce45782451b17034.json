{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = [\"for\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"type\", \"id\", \"name\"];\nconst _hoisted_6 = {\n  id: \"error-message\",\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"modal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Pay Service Bill\", -1 /* HOISTED */)), $data.messages.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.showConfirmation && $options.showConfirmation(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"hidden\",\n    name: \"csrfmiddlewaretoken\",\n    value: $data.csrfToken\n  }, null, 8 /* PROPS */, _hoisted_3), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.formFields, (field, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"form-field\"\n    }, [_createElementVNode(\"label\", {\n      for: field.name\n    }, _toDisplayString(field.label), 9 /* TEXT, PROPS */, _hoisted_4), _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => field.value = $event,\n      type: field.type,\n      id: field.name,\n      name: field.name,\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelDynamic, field.value]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Client-side validation error message (if any) \"), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($data.errorMessage), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Pay Now\", -1 /* HOISTED */)), _createCommentVNode(\" Loading Spinner \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Confirmation modal \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Are you sure you want to pay this bill?\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.confirmPayment && $options.confirmPayment(...args))\n  }, \"Yes\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.hideConfirmation && $options.hideConfirmation(...args))\n  }, \"No\")])) : _createCommentVNode(\"v-if\", true)]), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createVNode(_component_router_link, {\n    to: \"/dashboard\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Back to Dashboard\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","class","id","_createElementBlock","_createElementVNode","$data","messages","length","_hoisted_1","_Fragment","_renderList","message","index","_toDisplayString","_createCommentVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","showConfirmation","type","name","value","csrfToken","_hoisted_3","formFields","field","for","label","_hoisted_4","$event","required","_hoisted_5","_hoisted_6","errorMessage","loading","_hoisted_7","showModal","_hoisted_8","onClick","confirmPayment","hideConfirmation","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\ADMIN\\Desktop\\q - copy-gold\\myproject\\wallet-app\\src\\components\\pay_service.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Pay Service Bill</h1>\r\n  \r\n      <div v-if=\"messages.length\">\r\n        <ul>\r\n          <li v-for=\"(message, index) in messages\" :key=\"index\">{{ message }}</li>\r\n        </ul>\r\n      </div>\r\n  \r\n      <div class=\"form-container\">\r\n        <form @submit.prevent=\"showConfirmation\">\r\n          <input type=\"hidden\" name=\"csrfmiddlewaretoken\" :value=\"csrfToken\" />\r\n          <div v-for=\"(field, index) in formFields\" :key=\"index\" class=\"form-field\">\r\n            <label :for=\"field.name\">{{ field.label }}</label>\r\n            <input \r\n              v-model=\"field.value\" \r\n              :type=\"field.type\" \r\n              :id=\"field.name\" \r\n              :name=\"field.name\" \r\n              required \r\n            />\r\n          </div>\r\n  \r\n          <!-- Client-side validation error message (if any) -->\r\n          <div id=\"error-message\" class=\"error\">{{ errorMessage }}</div>\r\n  \r\n          <button type=\"submit\">Pay Now</button>\r\n  \r\n          <!-- Loading Spinner -->\r\n          <div class=\"spinner\" v-if=\"loading\"></div>\r\n        </form>\r\n  \r\n        <!-- Confirmation modal -->\r\n        <div v-if=\"showModal\" class=\"modal\">\r\n          <p>Are you sure you want to pay this bill?</p>\r\n          <button @click=\"confirmPayment\">Yes</button>\r\n          <button @click=\"hideConfirmation\">No</button>\r\n        </div>\r\n      </div>\r\n  \r\n      <br />\r\n      <router-link to=\"/dashboard\">Back to Dashboard</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        messages: [], // Pass this from your parent component or API\r\n        formFields: [\r\n          { label: \"Amount\", name: \"amount\", type: \"number\", value: null },\r\n          // Add other fields as necessary\r\n        ],\r\n        loading: false,\r\n        showModal: false,\r\n        errorMessage: \"\",\r\n        csrfToken: \"\" // Set this value through props or API\r\n      };\r\n    },\r\n    methods: {\r\n      showLoading() {\r\n        this.loading = true;\r\n      },\r\n      showConfirmation() {\r\n        if (this.validateForm()) {\r\n          this.showModal = true;\r\n        }\r\n      },\r\n      hideConfirmation() {\r\n        this.showModal = false;\r\n      },\r\n      confirmPayment() {\r\n        this.hideConfirmation();\r\n        this.showLoading();\r\n        // Logic to submit the form data\r\n        // Example: this.$http.post('/api/pay', { amount: this.formFields[0].value })\r\n        // Handle success and error responses\r\n      },\r\n      validateForm() {\r\n        const amount = this.formFields[0].value;\r\n        if (isNaN(amount) || amount <= 0) {\r\n          this.errorMessage = \"Please enter a valid amount.\";\r\n          return false;\r\n        }\r\n        this.errorMessage = \"\"; // Clear error message if valid\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Basic Reset */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Body Styles */\r\n  body {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f9fc;\r\n    color: #333;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  \r\n  /* Header Styles */\r\n  h1 {\r\n    font-size: 2.5em;\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* Form Container */\r\n  .form-container {\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Button Styles */\r\n  button {\r\n    padding: 10px 20px;\r\n    font-size: 1em;\r\n    color: #ffffff;\r\n    background-color: #000000;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #808080;\r\n  }\r\n  \r\n  /* Loading Spinner */\r\n  .spinner {\r\n    margin: 10px auto;\r\n    border: 4px solid #f3f3f3;\r\n    border-top: 4px solid #000000;\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    animation: spin 1s linear infinite;\r\n  }\r\n  \r\n  /* Modal Styles */\r\n  .modal {\r\n    display: block; /* Modify as necessary */\r\n  }\r\n  \r\n  /* Error Messages */\r\n  .error {\r\n    color: red;\r\n    font-size: 0.9em;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 600px) {\r\n    body {\r\n      padding: 15px;\r\n    }\r\n    h1 {\r\n      font-size: 2em;\r\n    }\r\n    .form-container {\r\n      padding: 15px;\r\n    }\r\n    button {\r\n      font-size: 0.9em;\r\n      padding: 8px 16px;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}