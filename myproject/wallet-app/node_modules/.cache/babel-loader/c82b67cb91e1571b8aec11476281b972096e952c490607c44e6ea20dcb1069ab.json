{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      depositWithdrawalTransactions: [],\n      transferRechargeTransactions: [],\n      charityTransactions: [],\n      servicePaymentTransactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n  },\n  methods: {\n    async fetchTransactions() {\n      try {\n        const response = await axios.get('/api/transactions'); // Update with your API endpoint\n        this.depositWithdrawalTransactions = response.data.deposit_withdrawal;\n        this.transferRechargeTransactions = response.data.transfer_recharge;\n        this.charityTransactions = response.data.charity;\n        this.servicePaymentTransactions = response.data.service_payment;\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    },\n    formatTimestamp(timestamp) {\n      const date = new Date(timestamp);\n      return date.toLocaleString(); // Format as needed\n    }\n  }\n};","map":{"version":3,"names":["axios","data","depositWithdrawalTransactions","transferRechargeTransactions","charityTransactions","servicePaymentTransactions","created","fetchTransactions","methods","response","get","deposit_withdrawal","transfer_recharge","charity","service_payment","error","console","formatTimestamp","timestamp","date","Date","toLocaleString"],"sources":["C:\\Users\\ADMIN\\Desktop\\q - copy-gold\\myproject\\wallet-app\\src\\components\\show_transactions.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Show Transactions</h1>\r\n  \r\n      <h2>Deposit and Withdrawal Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"depositWithdrawalTransactions.length === 0\">\r\n            <td colspan=\"3\">No transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in depositWithdrawalTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.transaction_type }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Transfer and Recharge Phone Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Recipient Phone</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"transferRechargeTransactions.length === 0\">\r\n            <td colspan=\"4\">No transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in transferRechargeTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.transaction_type }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ transaction.phone_number }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Charity Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Charity Name</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"charityTransactions.length === 0\">\r\n            <td colspan=\"3\">No charity transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in charityTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.charity.name }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Service Payment Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Service Name</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"servicePaymentTransactions.length === 0\">\r\n            <td colspan=\"3\">No service payment transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in servicePaymentTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.service.name }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        depositWithdrawalTransactions: [],\r\n        transferRechargeTransactions: [],\r\n        charityTransactions: [],\r\n        servicePaymentTransactions: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchTransactions();\r\n    },\r\n    methods: {\r\n      async fetchTransactions() {\r\n        try {\r\n          const response = await axios.get('/api/transactions'); // Update with your API endpoint\r\n          this.depositWithdrawalTransactions = response.data.deposit_withdrawal;\r\n          this.transferRechargeTransactions = response.data.transfer_recharge;\r\n          this.charityTransactions = response.data.charity;\r\n          this.servicePaymentTransactions = response.data.service_payment;\r\n        } catch (error) {\r\n          console.error('Error fetching transactions:', error);\r\n        }\r\n      },\r\n      formatTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleString(); // Format as needed\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Basic Reset */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Body Styles */\r\n  h1 {\r\n    font-size: 2.5em;\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 2em;\r\n    color: #555;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  table {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    border-collapse: collapse;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  thead {\r\n    background-color: #000000;\r\n    color: #ffffff;\r\n  }\r\n  \r\n  th,\r\n  td {\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  /* Empty State */\r\n  td[colspan] {\r\n    text-align: center;\r\n    font-style: italic;\r\n    color: #777;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 600px) {\r\n    table {\r\n      width: 100%;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"AA6FE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,6BAA6B,EAAE,EAAE;MACjCC,4BAA4B,EAAE,EAAE;MAChCC,mBAAmB,EAAE,EAAE;MACvBC,0BAA0B,EAAE;IAC9B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,mBAAmB,CAAC,EAAE;QACvD,IAAI,CAACR,6BAA4B,GAAIO,QAAQ,CAACR,IAAI,CAACU,kBAAkB;QACrE,IAAI,CAACR,4BAA2B,GAAIM,QAAQ,CAACR,IAAI,CAACW,iBAAiB;QACnE,IAAI,CAACR,mBAAkB,GAAIK,QAAQ,CAACR,IAAI,CAACY,OAAO;QAChD,IAAI,CAACR,0BAAyB,GAAII,QAAQ,CAACR,IAAI,CAACa,eAAe;MACjE,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACDE,eAAeA,CAACC,SAAS,EAAE;MACzB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAS,CAAC;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC,EAAE;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}