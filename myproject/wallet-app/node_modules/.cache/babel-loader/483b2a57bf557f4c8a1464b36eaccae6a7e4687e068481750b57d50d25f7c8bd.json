{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedCharity: null,\n      amount: null,\n      charities: [] // This will hold the list of charities\n    };\n  },\n  created() {\n    this.fetchCharities();\n  },\n  methods: {\n    fetchCharities() {\n      // Fetch the charities from your API endpoint\n      fetch('/api/charities/').then(response => response.json()).then(data => {\n        this.charities = data; // Assuming the API returns an array of charity objects\n      }).catch(error => console.error('Error fetching charities:', error));\n    },\n    handleSubmit() {\n      const data = {\n        charity_id: this.selectedCharity,\n        amount: this.amount\n      };\n\n      // Make a POST request to transfer the amount to the selected charity\n      fetch('/api/transfer-to-charity/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': this.getCsrfToken() // Handle CSRF token if needed\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.ok) {\n          // Handle success (e.g., show a success message)\n          alert('Transfer successful!');\n        } else {\n          // Handle error\n          alert('Transfer failed. Please try again.');\n        }\n      }).catch(error => console.error('Error during transfer:', error));\n    },\n    getCsrfToken() {\n      // Retrieve CSRF token from cookies or any method you're using\n      const cookieValue = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))?.split('=')[1];\n      return cookieValue;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedCharity","amount","charities","created","fetchCharities","methods","fetch","then","response","json","catch","error","console","handleSubmit","charity_id","method","headers","getCsrfToken","body","JSON","stringify","ok","alert","cookieValue","document","cookie","split","find","row","startsWith"],"sources":["C:\\Users\\ADMIN\\Desktop\\q - copy-gold\\myproject\\wallet-app\\src\\components\\transfer_to_charity.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <h1>Transfer to Charity</h1>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <label for=\"charity\">Select Charity:</label>\r\n        <select v-model=\"selectedCharity\" id=\"charity\" required>\r\n          <option v-for=\"charity in charities\" :key=\"charity.id\" :value=\"charity.id\">\r\n            {{ charity.name }}\r\n          </option>\r\n        </select>\r\n  \r\n        <label for=\"amount\">Amount:</label>\r\n        <input type=\"number\" v-model=\"amount\" id=\"amount\" required />\r\n  \r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      <router-link to=\"/dashboard\" class=\"back-link\">Back to Dashboard</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedCharity: null,\r\n        amount: null,\r\n        charities: [], // This will hold the list of charities\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchCharities();\r\n    },\r\n    methods: {\r\n      fetchCharities() {\r\n        // Fetch the charities from your API endpoint\r\n        fetch('/api/charities/')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.charities = data; // Assuming the API returns an array of charity objects\r\n          })\r\n          .catch(error => console.error('Error fetching charities:', error));\r\n      },\r\n      handleSubmit() {\r\n        const data = {\r\n          charity_id: this.selectedCharity,\r\n          amount: this.amount,\r\n        };\r\n  \r\n        // Make a POST request to transfer the amount to the selected charity\r\n        fetch('/api/transfer-to-charity/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': this.getCsrfToken(), // Handle CSRF token if needed\r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            // Handle success (e.g., show a success message)\r\n            alert('Transfer successful!');\r\n          } else {\r\n            // Handle error\r\n            alert('Transfer failed. Please try again.');\r\n          }\r\n        })\r\n        .catch(error => console.error('Error during transfer:', error));\r\n      },\r\n      getCsrfToken() {\r\n        // Retrieve CSRF token from cookies or any method you're using\r\n        const cookieValue = document.cookie\r\n          .split('; ')\r\n          .find(row => row.startsWith('csrftoken='))\r\n          ?.split('=')[1];\r\n        return cookieValue;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Basic Reset */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Body Styles */\r\n  body {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f9fc;\r\n    color: #333;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    padding: 20px;\r\n  }\r\n  \r\n  /* Form Container */\r\n  .form-container {\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* Header Styles */\r\n  h1 {\r\n    font-size: 2em;\r\n    color: #000000; /* Changed to black */\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Form Styles */\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  label {\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  input,\r\n  select {\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    background-color: #000000; /* Changed to black */\r\n    color: #ffffff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #808080; /* Changed to gray on hover */\r\n  }\r\n  \r\n  /* Back Link */\r\n  .back-link {\r\n    display: block;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    color: #000000; /* Changed to black */\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .back-link:hover {\r\n    color: #808080; /* Changed to gray on hover */\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 600px) {\r\n    .form-container {\r\n      width: 100%;\r\n      padding: 15px;\r\n    }\r\n  \r\n    h1 {\r\n      font-size: 1.5em;\r\n    }\r\n  \r\n    input,\r\n    select {\r\n      padding: 8px;\r\n      margin-bottom: 10px;\r\n    }\r\n  \r\n    button {\r\n      padding: 8px;\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"AAqBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACf;MACAE,KAAK,CAAC,iBAAiB,EACpBC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACR,IAAG,IAAK;QACZ,IAAI,CAACG,SAAQ,GAAIH,IAAI,EAAE;MACzB,CAAC,EACAW,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IACtE,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,MAAMd,IAAG,GAAI;QACXe,UAAU,EAAE,IAAI,CAACd,eAAe;QAChCC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;;MAED;MACAK,KAAK,CAAC,2BAA2B,EAAE;QACjCS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,IAAI;MAC3B,CAAC,EACAQ,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACa,EAAE,EAAE;UACf;UACAC,KAAK,CAAC,sBAAsB,CAAC;QAC/B,OAAO;UACL;UACAA,KAAK,CAAC,oCAAoC,CAAC;QAC7C;MACF,CAAC,EACAZ,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;IACjE,CAAC;IACDM,YAAYA,CAAA,EAAG;MACb;MACA,MAAMM,WAAU,GAAIC,QAAQ,CAACC,MAAK,CAC/BC,KAAK,CAAC,IAAI,EACVC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,GACvCH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjB,OAAOH,WAAW;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}