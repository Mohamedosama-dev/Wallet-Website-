{"ast":null,"code":"export default {\n  data() {\n    return {\n      targetPhone: '',\n      amount: 0\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Make an API call to recharge the phone\n        const response = await fetch('/api/recharge-phone', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            target_phone: this.targetPhone,\n            amount: this.amount\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to recharge phone');\n        }\n        const data = await response.json();\n        // Handle success (e.g., show a success message)\n        alert(data.message || 'Recharge successful!');\n        // Reset form fields\n        this.targetPhone = '';\n        this.amount = 0;\n      } catch (error) {\n        // Handle error (e.g., show an error message)\n        alert(error.message || 'An error occurred. Please try again.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","targetPhone","amount","methods","submitForm","response","fetch","method","headers","body","JSON","stringify","target_phone","ok","Error","json","alert","message","error"],"sources":["C:\\Users\\ADMIN\\Desktop\\q - copy-gold\\myproject\\wallet-app\\src\\components\\recharge_phone.vue"],"sourcesContent":["<template>\r\n    <div class=\"recharge-phone\">\r\n      <h1>Recharge Phone Credit</h1>\r\n      <form @submit.prevent=\"submitForm\">\r\n        <label for=\"target_phone\">Phone Number:</label>\r\n        <input type=\"text\" id=\"target_phone\" v-model=\"targetPhone\" required />\r\n  \r\n        <label for=\"amount\">Amount:</label>\r\n        <input type=\"number\" id=\"amount\" v-model=\"amount\" step=\"0.01\" required />\r\n  \r\n        <button type=\"submit\">Recharge</button>\r\n      </form>\r\n  \r\n      <router-link to=\"/dashboard\">Back to Dashboard</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        targetPhone: '',\r\n        amount: 0,\r\n      };\r\n    },\r\n    methods: {\r\n      async submitForm() {\r\n        try {\r\n          // Make an API call to recharge the phone\r\n          const response = await fetch('/api/recharge-phone', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              target_phone: this.targetPhone,\r\n              amount: this.amount,\r\n            }),\r\n          });\r\n  \r\n          if (!response.ok) {\r\n            throw new Error('Failed to recharge phone');\r\n          }\r\n  \r\n          const data = await response.json();\r\n          // Handle success (e.g., show a success message)\r\n          alert(data.message || 'Recharge successful!');\r\n          // Reset form fields\r\n          this.targetPhone = '';\r\n          this.amount = 0;\r\n        } catch (error) {\r\n          // Handle error (e.g., show an error message)\r\n          alert(error.message || 'An error occurred. Please try again.');\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Basic Reset */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Body Styles */\r\n  .recharge-phone {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f4f9fc;\r\n    color: #333;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  \r\n  /* Header Styles */\r\n  h1 {\r\n    font-size: 2.5em;\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* Form Styles */\r\n  form {\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  /* Label Styles */\r\n  label {\r\n    display: block;\r\n    font-size: 1.2em;\r\n    margin-bottom: 10px;\r\n    color: #555;\r\n  }\r\n  \r\n  /* Input Styles */\r\n  input[type='text'],\r\n  input[type='number'] {\r\n    width: calc(100% - 22px);\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 1em;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  /* Button Styles */\r\n  button {\r\n    background-color: #000000;\r\n    color: #ffffff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    font-size: 1.2em;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #808080;\r\n  }\r\n  \r\n  /* Link Styles */\r\n  .router-link {\r\n    display: inline-block;\r\n    font-size: 1.2em;\r\n    color: #000000;\r\n    text-decoration: none;\r\n    margin-top: 20px;\r\n    transition: color 0.3s ease;\r\n  }\r\n  \r\n  .router-link:hover {\r\n    color: #808080;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 600px) {\r\n    .recharge-phone {\r\n      padding: 15px;\r\n    }\r\n  \r\n    h1 {\r\n      font-size: 2em;\r\n    }\r\n  \r\n    label,\r\n    input,\r\n    button,\r\n    a {\r\n      font-size: 1em;\r\n    }\r\n  \r\n    input[type='text'],\r\n    input[type='number'] {\r\n      width: calc(100% - 18px);\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"AAkBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,qBAAqB,EAAE;UAClDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,YAAY,EAAE,IAAI,CAACX,WAAW;YAC9BC,MAAM,EAAE,IAAI,CAACA;UACf,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QAEA,MAAMd,IAAG,GAAI,MAAMK,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC;QACAC,KAAK,CAAChB,IAAI,CAACiB,OAAM,IAAK,sBAAsB,CAAC;QAC7C;QACA,IAAI,CAAChB,WAAU,GAAI,EAAE;QACrB,IAAI,CAACC,MAAK,GAAI,CAAC;MACjB,EAAE,OAAOgB,KAAK,EAAE;QACd;QACAF,KAAK,CAACE,KAAK,CAACD,OAAM,IAAK,sCAAsC,CAAC;MAChE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}