{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Show Transactions\", -1 /* HOISTED */)), _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Deposit and Withdrawal Transactions\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Amount\"), _createElementVNode(\"th\", null, \"Timestamp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [$data.depositWithdrawalTransactions.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"td\", {\n    colspan: \"3\"\n  }, \"No transactions found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.depositWithdrawalTransactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.transaction_type), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTimestamp(transaction.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Transfer and Recharge Phone Transactions\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Type\"), _createElementVNode(\"th\", null, \"Amount\"), _createElementVNode(\"th\", null, \"Recipient Phone\"), _createElementVNode(\"th\", null, \"Timestamp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [$data.transferRechargeTransactions.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_2, _cache[2] || (_cache[2] = [_createElementVNode(\"td\", {\n    colspan: \"4\"\n  }, \"No transactions found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.transferRechargeTransactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.transaction_type), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.phone_number), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTimestamp(transaction.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"Charity Transactions\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Charity Name\"), _createElementVNode(\"th\", null, \"Amount\"), _createElementVNode(\"th\", null, \"Timestamp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [$data.charityTransactions.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_3, _cache[4] || (_cache[4] = [_createElementVNode(\"td\", {\n    colspan: \"3\"\n  }, \"No charity transactions found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.charityTransactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.charity.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTimestamp(transaction.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Service Payment Transactions\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Service Name\"), _createElementVNode(\"th\", null, \"Amount\"), _createElementVNode(\"th\", null, \"Timestamp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [$data.servicePaymentTransactions.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_4, _cache[6] || (_cache[6] = [_createElementVNode(\"td\", {\n    colspan: \"3\"\n  }, \"No service payment transactions found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.servicePaymentTransactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.service.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatTimestamp(transaction.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","depositWithdrawalTransactions","length","_hoisted_1","_cache","colspan","_createCommentVNode","_Fragment","_renderList","transaction","id","_toDisplayString","transaction_type","amount","$options","formatTimestamp","timestamp","transferRechargeTransactions","_hoisted_2","phone_number","charityTransactions","_hoisted_3","charity","name","servicePaymentTransactions","_hoisted_4","service"],"sources":["C:\\Users\\ADMIN\\Desktop\\q - copy-gold\\myproject\\wallet-app\\src\\components\\show_transactions.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Show Transactions</h1>\r\n  \r\n      <h2>Deposit and Withdrawal Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"depositWithdrawalTransactions.length === 0\">\r\n            <td colspan=\"3\">No transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in depositWithdrawalTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.transaction_type }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Transfer and Recharge Phone Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Recipient Phone</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"transferRechargeTransactions.length === 0\">\r\n            <td colspan=\"4\">No transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in transferRechargeTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.transaction_type }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ transaction.phone_number }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Charity Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Charity Name</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"charityTransactions.length === 0\">\r\n            <td colspan=\"3\">No charity transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in charityTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.charity.name }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <h2>Service Payment Transactions</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Service Name</th>\r\n            <th>Amount</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"servicePaymentTransactions.length === 0\">\r\n            <td colspan=\"3\">No service payment transactions found.</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in servicePaymentTransactions\" :key=\"transaction.id\">\r\n            <td>{{ transaction.service.name }}</td>\r\n            <td>{{ transaction.amount }}</td>\r\n            <td>{{ formatTimestamp(transaction.timestamp) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        depositWithdrawalTransactions: [],\r\n        transferRechargeTransactions: [],\r\n        charityTransactions: [],\r\n        servicePaymentTransactions: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchTransactions();\r\n    },\r\n    methods: {\r\n      async fetchTransactions() {\r\n        try {\r\n          const response = await axios.get('/api/transactions'); // Update with your API endpoint\r\n          this.depositWithdrawalTransactions = response.data.deposit_withdrawal;\r\n          this.transferRechargeTransactions = response.data.transfer_recharge;\r\n          this.charityTransactions = response.data.charity;\r\n          this.servicePaymentTransactions = response.data.service_payment;\r\n        } catch (error) {\r\n          console.error('Error fetching transactions:', error);\r\n        }\r\n      },\r\n      formatTimestamp(timestamp) {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleString(); // Format as needed\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Basic Reset */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  /* Body Styles */\r\n  h1 {\r\n    font-size: 2.5em;\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 2em;\r\n    color: #555;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  table {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    border-collapse: collapse;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  thead {\r\n    background-color: #000000;\r\n    color: #ffffff;\r\n  }\r\n  \r\n  th,\r\n  td {\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  /* Empty State */\r\n  td[colspan] {\r\n    text-align: center;\r\n    font-style: italic;\r\n    color: #777;\r\n  }\r\n  \r\n  /* Responsive Design */\r\n  @media (max-width: 600px) {\r\n    table {\r\n      width: 100%;\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}